module jkff(input clk,j,k,p,c,output reg q);


always @ (posedge clk)begin
    if(~p && c)
        q <= 1;
    else if(p &&~c)
        q <= 0;
    else if(p && c) begin
        case ({j,k})
        2'b00: q<=q;
        2'b01: q<=0;
        2'b10: q<=1;
        2'b11: q<=~q; 
        endcase
    end
end
                
endmodule

module jktb;
reg clk,j,k,p,c;
wire q;
jkff tb(clk,j,k,p,c,q); 

initial begin
  clk=0;
    
end 
initial begin 
 p<=0;c<=1; 
 #10 p<=1;c<=0; 
 #10 p<=1; c<=1; j <= 0; k<=0;
 #10 j <= 0;k<=0;
 #20 j <= 0;k<=0;
 #10 j <= 1;k<=1;
 #10 j <= 1;k<=0;
 #20 j <= 0;k<=10;
 #10 j <= 1;k<=0;
 #20 j <= 0;k<=1;
 #10 j <= 1;k<=1;
end 
always #2 clk = ~clk;
endmodule
