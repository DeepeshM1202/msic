module tff(input clk,t,p,c,output reg q);


always @ (posedge clk)begin
    if(~p && c)
        q <= 0;
    else if(p &&~c)
        q <= 1;
    else if(~p && ~c)begin
    if(t) q<=~q;
    else q<=q;
    end
end
                
endmodule
module ttb;
reg clk,t,p,c;
wire q;
tff tb(clk,t,p,c,q); 

initial begin
  clk=0;
    
end 
initial begin 
 p<=0;c<=1; t <= 0;
 #10 p<=1;c<=0; t <= 0;
 #10 p<=0; c<=0; t <= 1;
 #10 t <= 0;
 #10 t <= 0;
 #10 t <= 1;
 #10 t <= 1;
 #10 t <= 0;
 #10 t <= 1;
 #10 t <= 0;
 #10 t <= 1;
end 
always #2 clk = ~clk;
endmodule