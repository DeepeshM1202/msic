module srff(input clk,s,r,p,c,output reg q);


always @ (posedge clk)begin
    if(~p && c)
        q <= 0;
    else if(p &&~c)
        q <= 1;
    else if(~p && ~c) begin
        case ({s,r})
        2'b00: q<=q;
        2'b01: q<=0;
        2'b10: q<=1;
        2'b11: q<=1'bx; 
        endcase
    end
end
                
endmodule
module srtb;
reg clk,s,r,p,c;
wire q;
srff tb(clk,s,r,p,c,q); 

initial begin
  clk=0;
    
end 
initial begin 
 p<=0;c<=1; 
 #10 p<=1;c<=0; 
 #10 p<=0; c<=0; s <= 0; r<=0;
 #10 s <= 0;r<=0;
 #20 s <= 0;r<=0;
 #10 s <= 1;r<=1;
 #10 s <= 1;r<=0;
 #20 s <= 0;r<=1;
 #10 s <= 1;r<=0;
 #20 s <= 0;r<=1;
 #10 s <= 1;r<=0;
end 
always #2 clk = ~clk;
endmodule